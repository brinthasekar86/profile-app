{"version":3,"sources":["utilities/index.js","type.js","Edit.js","Output.js","App.js","reportWebVitals.js","index.js"],"names":["updateMaster","idx","workExperience","setWorkExperience","field","children","map","value","i","expobject","Object","keys","forEach","key","console","log","updatefield","convertBase64","imgfile","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","Type","props","className","type","required","onChange","e","update","target","node","start","end","persist","title","company","image","src","img","alt","style","display","a","files","base64","rows","description","Edit","useState","name","setName","age","setAge","setImage","id","useParams","history","useHistory","editId","setEditId","show","setShow","handleClose","handleImage","useEffect","axios","method","url","withCredentials","then","res","data","catch","err","width","onError","placeholder","min","max","onClick","random","Math","floor","toString","index","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","Button","variant","push","Output","logo","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c08be746.chunk.js","sourcesContent":["const updatefield = (value, field, children) => {\r\n  //console.log(\"updatemaster triggered\");\r\n  let expobject = value;\r\n  const objectKey = Object.keys(value);\r\n  //console.log(expobject, objectKey, field, children);\r\n  objectKey.forEach((key) =>\r\n    key === field ? (expobject[field] = children) : \"\"\r\n  );\r\n  console.log(expobject);\r\n  return expobject;\r\n};\r\nexport const updateMaster = (idx, workExperience, setWorkExperience) => (\r\n  field,\r\n  children\r\n) => {\r\n  //console.log(\"innerupdate triggered\");\r\n  setWorkExperience(\r\n    workExperience.map((value, i) =>\r\n      i === idx ? updatefield(value, field, children) : value\r\n    )\r\n  );\r\n};\r\n\r\nexport const convertBase64 = (imgfile) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!imgfile) return resolve(\"\");\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(imgfile);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { convertBase64 } from \"./utilities/index\";\r\n\r\nfunction Type(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>Start Day</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  required=\"required\"\r\n                  onChange={(e) => {\r\n                    props.update(\"start\", e.target.value); //update(index, workExperience, setWorkExperience);\r\n                  }}\r\n                  value={props.node.start}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>End Date</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  required=\"required\"\r\n                  onChange={(e) => {\r\n                    props.update(\"end\", e.target.value);\r\n                  }}\r\n                  value={props.node.end}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>Job Title</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    console.log(e.target.value);\r\n                    //props.node.title = e.target.value;\r\n                    props.update(\"title\", e.target.value);\r\n                  }}\r\n                  value={props.node.title}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>Company</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  onChange={(e) => {\r\n                    props.update(\"company\", e.target.value);\r\n                    // update(index, workExperience, setWorkExperience);\r\n                  }}\r\n                  value={props.node.company}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>Company Logo</label>\r\n                  {props.node.image ? (\r\n                  <label>\r\n                    <img src={props.node.img} alt=\"img\"></img>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={async (e) => {\r\n                        const imgfile = e.target.files[0];\r\n                        const base64 = await convertBase64(imgfile);\r\n                        props.update(\"logo\", base64);\r\n                      }}\r\n                    ></input>\r\n                  </label>\r\n                ) : (\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={async (e) => {\r\n                      const imgfile = e.target.files[0];\r\n                      const base64 = await convertBase64(imgfile);\r\n                      props.update(\"logo\", base64);\r\n                    }}\r\n                  ></input>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"form-group\">\r\n                <label>Job Description</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"5\"\r\n                  required=\"required\"\r\n                  onChange={(e) => {\r\n                    props.update(\"description\", e.target.value);\r\n                    // update(index, workExperience, setWorkExperience);\r\n                  }}\r\n                  value={props.node.description}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Type;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Type from \"./type\";\r\nimport axios from \"axios\";\r\nimport { convertBase64, updateMaster } from \"./utilities/index\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./edit.css\";\r\n\r\nfunction Edit() {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [workExperience, setWorkExperience] = useState([]);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const handleRedirect = () => {\r\n    history.push(`/${editId}`);\r\n    setShow(false);\r\n  };\r\n\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleImage = async (e) => {\r\n    e.persist();\r\n    const imgfile = e.target.files[0];\r\n    const base64 = await convertBase64(imgfile);\r\n    setImage(base64);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    if (id) {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/profile/post\",\r\n        data: {\r\n          name: name,\r\n          age: age,\r\n          image: image,\r\n          id: id,\r\n          workExperience: workExperience,\r\n        },\r\n        withCredentials: true,\r\n      })\r\n        .then((res) => res.data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.id) {\r\n            setShow(true);\r\n          }\r\n          //history.push(`/output/${res.id}`);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      console.log(\"else\");\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/profile/post\",\r\n        data: {\r\n          name: name,\r\n          age: age,\r\n          image: image,\r\n          key: id,\r\n          workExperience: workExperience,\r\n        },\r\n        withCredentials: true,\r\n      })\r\n        .then((res) => res.data)\r\n        .then((res) => {\r\n          console.log(\"else\", res);\r\n          if (res.id) {\r\n            setShow(true);\r\n            setEditId(res.id);\r\n          }\r\n\r\n          //history.push(`/output/${res.id}`);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      console.log(\"edit mode\");\r\n      axios({\r\n        method: \"GET\",\r\n        url: `http://localhost:5000/profile/get/${id}`,\r\n        withCredentials: true,\r\n      })\r\n        .then((res) => res.data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setName(res.name);\r\n          setAge(res.age);\r\n          setImage(res.image);\r\n          setWorkExperience(res.workExperience);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <div>\r\n      <div className=\"container rounded bg-white mt-5 mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 border-right\">\r\n            <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n              {/* <img className=\"rounded-circle mt-5\" src={image} width=\"90\"></img> */}\r\n              <img\r\n                className=\"rounded-circle mt-5\"\r\n                width=\"50%\"\r\n                src={image}\r\n                onError={(e) => {\r\n                  e.target.onerror = null;\r\n                  e.target.src = \"../user-male-circle.png\";\r\n                }}\r\n              />\r\n              <span className=\"font-weight-bold\">{name}</span>{\" \"}\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column align-items-center text-center p-3 py-5 form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                onChange={handleImage}\r\n              ></input>\r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"col-md-5 border-right\">\r\n            <div className=\"p-3 py-5\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <h5 className=\"text-right\">User profile</h5>\r\n              </div>\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"labels\">Name</label>{\" \"}\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    value={name}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"labels\">Age</label>{\" \"}\r\n                  {age ? (\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max=\"100\"\r\n                      value={age}\r\n                      onChange={(e) => setAge(e.target.value)}\r\n                    ></input>\r\n                  ) : (\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max=\"100\"\r\n                      onChange={(e) => setAge(e.target.value)}\r\n                    ></input>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"p-3 py-5\">\r\n              <div className=\"d-flex justify-content-between align-items-center experience\">\r\n                <h5 className=\"text-right\">Work Experience</h5>\r\n                <span\r\n                  className=\"border px-3 p-1 add-experience\"\r\n                  onClick={() => {\r\n                    const random = Math.floor(Math.random() * 1000000).toString(\r\n                      16\r\n                    );\r\n                    setWorkExperience([\r\n                      ...workExperience,\r\n                      {\r\n                        key: random,\r\n                        start: \"\",\r\n                        end: \"\",\r\n                        title: \"\",\r\n                        company: \"\",\r\n                        description: \"\",\r\n                      },\r\n                    ]);\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-plus\"></i>&nbsp;Experience\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-row mt-3 exp-container\">\r\n                <div className=\"work-experience ml-1\">\r\n                  {workExperience\r\n                    ? workExperience.map((node, index) => (\r\n                        <Type\r\n                          node={node}\r\n                          update={updateMaster(\r\n                            index,\r\n                            workExperience,\r\n                            setWorkExperience\r\n                          )}\r\n                        />\r\n                      ))\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <button\r\n                    className=\"btn btn-primary profile-button\"\r\n                    type=\"button\"\r\n                    onClick={handleSave}\r\n                  >\r\n                    Save Profile\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>User Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <div>\r\n                    <div className=\"card bmi\" style={{ width: \"18rem\" }}>\r\n                      <img src={image} alt=\"img\" className=\"card-img-top\"></img>\r\n                      <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">Name :{name} </li>\r\n                        <li className=\"list-group-item\">Age:{age}</li>\r\n                      </ul>\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Work Experience</h5>\r\n                        {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\r\n                        {workExperience\r\n                          ? workExperience.map((value) => (\r\n                              <div>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                  <li className=\"list-group-item\">\r\n                                    Start-Date:{value.start}\r\n                                  </li>\r\n                                  <li className=\"list-group-item\">\r\n                                    End-Date:{value.end}\r\n                                  </li>\r\n                                  <li className=\"list-group-item\">\r\n                                    Company:{value.company}\r\n                                  </li>\r\n                                  <li className=\"list-group-item\">\r\n                                    Title:{value.title}\r\n                                  </li>\r\n                                  <li className=\"list-group-item\">\r\n                                    Description:{value.description}\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            ))\r\n                          : \"\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                  </Button>\r\n                  <Button variant=\"primary\" onClick={handleRedirect}>\r\n                    Edit\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n              {console.log(workExperience)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Edit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Output() {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const handleRedirect = () => history.push(`/${id}`);\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [workExperience, setWorkExperience] = useState([]);\r\n  useEffect(() => {\r\n    console.log(id);\r\n    axios({\r\n      method: \"GET\",\r\n      url: `http://localhost:5000/profile/get/${id}`,\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => res.data)\r\n      .then((res) => {\r\n        setName(res.name);\r\n        setAge(res.age);\r\n        setImage(res.image);\r\n        setWorkExperience(res.workExperience);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n  return (\r\n    <div>\r\n      <p>Name:{name}</p>\r\n      <p>Age:{age}</p>\r\n      <p>Profile Image</p>\r\n      <img src={image} alt=\"img\"></img>\r\n      <p>Work Experience</p>\r\n      {workExperience\r\n        ? workExperience.map((value) => (\r\n            <div>\r\n              <img src={value.logo} alt=\"img\"></img>\r\n              <ul>\r\n                <li>Start-Date:{value.start}</li>\r\n                <li>End-Date:{value.end}</li>\r\n                <li>Company:{value.company}</li>\r\n                <li>Title:{value.title}</li>\r\n                <li>Description:{value.description}</li>\r\n              </ul>\r\n            </div>\r\n          ))\r\n        : \"\"}\r\n      <button onClick={handleRedirect}>Edit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Output;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Edit from \"./Edit\";\r\nimport Output from \"./Output\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/output/:id\" component={Output} />\r\n        <Route path=\"/:id\" component={Edit} />\r\n        <Route path=\"/\" component={Edit} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport  './edit.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}